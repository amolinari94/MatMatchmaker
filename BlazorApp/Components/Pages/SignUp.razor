
@page "/SignUp"
@using DataAccessLibrary.Models
@using BlazorApp.Models
@using DataAccessLibrary
@inject IProfileData _db
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager

@rendermode InteractiveServer



<PageTitle>SignUp</PageTitle>
<head>

</head>
<div style="text-align: center;">
    <img src="Logo.png" width="300" height="200" style="display: inline-block;">
</div>
<h1 class="center-title">Sign Up</h1>

<body class="SignUp-body">

<EditForm Model="@profileModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <table class="input-table" style="border-collapse: collapse; border-spacing: 0;">
        <tr>
            <td><InputText placeholder="Email" class="input-SignUp" @bind-Value="@profileModel.email"/></td>
            <ValidationMessage For="@(() => profileModel.email)"/>
        </tr>
        <tr>
            <td><InputText placeholder="City" class="input-SignUp" @bind-Value="@profileModel.city"/></td>
            <ValidationMessage For="@(() => profileModel.city)"/>
        </tr>
        <tr>
            <td><InputText placeholder="State" class="input-SignUp" @bind-Value="@profileModel.state"/></td>
            <ValidationMessage For="@(() => profileModel.state)"/>
        </tr>
        <tr>
            <td><InputText placeholder="School Name" class="input-SignUp" @bind-Value="@profileModel.schoolName"/></td>
            <ValidationMessage For="@(() => profileModel.schoolName)"/>
        </tr>
        <tr>
            <td><InputText placeholder="Password" class="input-SignUp" @bind-Value="@profileModel.password" type="password"/></td>
            <ValidationMessage For="@(() => profileModel.password)"/>
        </tr>
        <tr>
            <td><InputText placeholder="Confirm Password" class="input-SignUp" @bind-Value="@profileModel.ConfirmPassword" type="password"/></td>
            <ValidationMessage For="@(() => profileModel.ConfirmPassword)"/>
        </tr>
        <tr>
            <td colspan="2" style="text-align: center;">
                <button type="submit" class="btn btn-primary">Submit</button>
            </td>
        </tr>
    </table>
</EditForm>

</body>
@code {
    private DisplayProfileModel profileModel = new DisplayProfileModel();

    private async Task HandleValidSubmit()
    {
        // Form is valid, proceed with form submission
        try
        {
            // Call the method to insert the new profile into the database
            await _db.InsertProfile(new ProfileModel
            {
                email = profileModel.email,
                password = profileModel.password,
                schoolName = profileModel.schoolName,
                city = profileModel.city,
                state = profileModel.state
            });

            // Optionally, perform additional actions after successful insertion
            Console.WriteLine($"Profile email: {profileModel.email}");

            // Clear form fields upon successful insertion
            profileModel = new DisplayProfileModel(); // Reset form
            NavigationManager.NavigateTo("/Login");
        }
        catch (Exception ex)
        {
            // Handle any exceptions (e.g., database error)
            Console.WriteLine("Error inserting profile: " + ex.Message);
            // Display error message to the user, log the error, or perform appropriate error handling
        }
    }

}