
@page "/SignUp"
@using DataAccessLibrary.Models
@using BlazorApp.Models
@using DataAccessLibrary
@inject IProfileData _db

@rendermode InteractiveServer



<PageTitle>SignUp</PageTitle>
<head>

</head>
<div style="text-align: center;">
    <img src="Logo.png" width="300" height="200" style="display: inline-block;">
</div>
<h1 class="center-title">Sign Up</h1>

<body class="SignUp-body">

@*<EditForm Model="@newProfile" OnSubmit="@InsertProfile">
    <InputText id ="email" @bind-Value="newProfile.email"/>
    <InputText id ="city" @bind-Value="newProfile.city"/>
    <InputText id ="state" @bind-Value="newProfile.state"/>
    <InputText id ="SchoolName" @bind-Value="newProfile.schoolName"/>
    <InputText id ="Password" @bind-Value="newProfile.password"/>
    
    
    <button type="submit" class="btn btn-primary">Submit</button>


</EditForm>*@

          
<Form>
    <table class="input-table" style="border-collapse: collapse; border-spacing: 0;">
        <tr>
            <td><InputText placeholder="Email" class="input-SignUp" @bind-Value="newProfile.email" /></td>
        </tr>
        <tr>
            <td><InputText placeholder="City" class="input-SignUp" @bind-Value="newProfile.city" /></td>
        </tr>
        <tr>
            <td><InputText placeholder="State" class="input-SignUp" @bind-Value="newProfile.state" /></td>
        </tr>
        <tr>
            <td><InputText placeholder="School Name" class="input-SignUp" @bind-Value="newProfile.schoolName" /></td>
        </tr>
        <tr>
            <td><InputText placeholder="Password" class="input-SignUp" @bind-Value="newProfile.password" /></td>
        </tr>
        <tr>
            <td><InputText id="confirmPass" placeholder="confirmPass" class="input-SignUp" @bind-Value="passwordTemp2" /></td>
        </tr>
        <tr>
            <td colspan="2" style="text-align: center;">
                <button class="btn btn-primary" @onclick="CheckPasswords">Submit</button>
            </td>
        </tr>
        @if (!string.IsNullOrEmpty(confirmPass))
        {
            <tr>
                <td colspan="2" style="text-align: center; color: red;">@confirmPass</td>
            </tr>
        }
    </table>
</Form> 


</body> 

@code {
    
    
    //private string localEmail, localUserName, localCity, localState, localSchoolName, passwordTemp1, passwordTemp2;
    private List<ProfileModel> profile;
    private DisplayProfileModel newProfile = new DisplayProfileModel();

    private string passwordTemp2;
    private string confirmPass = "";


    protected override async Task OnInitializedAsync()
    {
        profile = await _db.GetProfiles();
    }

    //private string passwordTemp1, passwordTemp2;

    


    private async Task CheckPasswords()
    {
        // Store the entered password temporarily
        string enteredPassword = newProfile.password;

        // Check if passwords match
        if (enteredPassword != passwordTemp2)
        {
            confirmPass = "**Passwords must match**";
            return; // Exit the method without proceeding further
        }
        else
        {
            // Clear the error message if passwords match
            confirmPass = string.Empty;
        }

        try
        {
            // Create a ProfileModel instance from newProfile (DisplayProfileModel)
            var profileModel = new ProfileModel
            {
                email = newProfile.email,
                password = enteredPassword, // Use the entered password
                schoolName = newProfile.schoolName,
                city = newProfile.city,
                state = newProfile.state
            };

            // Call the method to insert the new profile into the database
            await _db.InsertProfile(profileModel);

            // Optionally, perform additional actions after successful insertion
            Console.WriteLine($"Profile email: {newProfile.email}");

            // Clear form fields upon successful insertion
            newProfile = new DisplayProfileModel(); // Reset newProfile object

            // Reset temporary password variables
            passwordTemp2 = string.Empty;
            confirmPass = string.Empty; // Clear any previous error message

            // Redirect to another page (e.g., home page)
            // NavigationManager.NavigateTo("/home");
        }
        catch (Exception ex)
        {
            // Handle any exceptions (e.g., database error)
            Console.WriteLine("Error inserting profile: " + ex.Message);
            // Display error message to the user, log the error, or perform appropriate error handling
        }
    }



}