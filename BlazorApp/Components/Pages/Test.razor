@page "/Test"
@using DataAccessLibrary.Models
@using DataAccessLibrary
@using Microsoft.AspNetCore.Antiforgery
@inject IMatchData _dba
@using Microsoft.JSInterop
@inject IJSRuntime jsRuntime
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@using Microsoft.AspNetCore.Antiforgery
@using Structure
@using Microsoft.JSInterop
@using System.Text.Json
@using Blazored.LocalStorage
@inject IEventData eventData
@inject IEventData _dbe
@inject DataAccessLibrary.IEventData EventData
@rendermode InteractiveServer


@inject IProfileData profileData

@inject IEventGuestsData eventGuestData

<h3>User Events</h3>

@if (events != null && events.Any())
{
    <ul>
        @foreach (var ev in events)
        {
            //<li>Event ID: @ev.event_id, Host Profile ID: @ev.host_profile_id, Event Date: @(ev.event_date.HasValue ? ev.event_date.Value.ToShortDateString() : "N/A")</li>
        }
    </ul>
}
else
{
    <p>No events found for this user.</p>
}

@code {
    [Parameter]
    public int userProfileID { get; set; } = 5; // Hardcoded profile ID for testing

    private List<EventModel> events;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Use the hardcoded profile ID (4) to retrieve events
            events = await eventData.GetEventsByUserProfileID(userProfileID);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading user events: {ex.Message}");
        }
    }
}
