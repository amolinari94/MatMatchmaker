@page "/Test"
@using DataAccessLibrary.Models
@using DataAccessLibrary
@using Microsoft.AspNetCore.Antiforgery
@inject IMatchData _dba
@using Microsoft.JSInterop
@inject IJSRuntime jsRuntime
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@using Microsoft.AspNetCore.Antiforgery
@using Structure
@using Microsoft.JSInterop
@using System.Text.Json
@using Blazored.LocalStorage
@inject IEventData eventData
@inject IEventData _db
@inject DataAccessLibrary.IEventData EventData
@rendermode InteractiveServer

<h3>Test Events</h3>
<h3>Test Add Event</h3>

<div>
    <label>Event Date:</label>
    <input type="date" @bind="eventDate" />
</div>

<div>
    <label>Host Profile ID:</label>
    <input type="number" @bind="hostProfileId" />
</div>

<button @onclick="AddEvent">Add Event</button>

<p>@resultMessage</p>

@code {
    private DateTime eventDate;
    private int hostProfileId;
    private string resultMessage;

    private async Task AddEvent()
    {
        int eventId = await _db.AddEvent(eventDate, hostProfileId);
        if (eventId > 0)
        {
            resultMessage = $"Event added successfully with ID: {eventId}";
        }
        else
        {
            resultMessage = "Failed to add event.";
        }
    }
}